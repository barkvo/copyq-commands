[Command]
Command="
    copyq:
    var suffices = {
      'image/svg': 'svg',
      'image/png': 'png',
      'image/jpeg': 'jpg',
      'image/jpg': 'jpg',
      'image/bmp': 'bmp',
      'text/html': 'html',
      'text/plain' : 'txt',
    }
    var savePath = Dir().homePath();
    var parseFileName = true;

    function hasSuffix(fileName)
    {
      return /\\.[0-9a-zA-z]+$/.test(fileName);
    }

    function addSuffix(fileName, format)
    {
      var suffix = suffices[format]
      return suffix ? fileName + \".\" + suffix : fileName
    }

    function filterFormats(format)
    {
      return /^[a-z]/.test(format) && !/^application\\/x/.test(format)
    }

    function itemFormats(row)
    {
      return str(read('?', row))
        .split('\\n')
        .filter(filterFormats)
    }

    function formatPriority(format)
    {
      var k = Object.keys(suffices);
      var i = k.indexOf(format);
      return i === -1 ? k.length : i
    }

    function reorderFormats(formats)
    {
      formats.sort(function(lhs, rhs){
        var i = formatPriority(lhs);
        var j = formatPriority(rhs);
        return i === j ? lhs.localeCompare(rhs) : i - j;
      })
    }

    function getDefaultName(row, formats)
    {
      var name = dateString('yyyy_MM_dd__HH_mm_ss');
      var canParseFile = formats[0] === 'text/plain' || formats[0] === 'text/html';
      if (parseFileName && canParseFile) {
        var maxNameLength = 60;
        var content = str(read(row));
        var suitableRows = content.split('\\n').filter(function(rowItem){
          return rowItem.replace(/[^a-zA-Zа-яА-Я0-9_]/g, '') !== '';
        });
        if (suitableRows.length) {
         name = suitableRows[0].substring(0, maxNameLength).trim().replace(/[^a-zA-Zа-яА-Я0-9_]/g, '_') + '_' + name;
        }
      }
      return name;
    }

    if (selectedtab()) tab(selectedtab())
    var row = selectedtab() ? currentitem() : -1
    var formats = itemFormats(row)
    reorderFormats(formats)

    currentpath(savePath)
    var defaultFileName = getDefaultName(row, formats);

    var keyFormat = 'Format'
    var keyFileName = 'File'
    var defaultFormat = formats[0]

    var result = dialog(
      '.title', 'Save Item As...',
      '.width', 350,
      keyFormat, [defaultFormat].concat(formats.filter(function(format){
        return format !== defaultFormat
      })),
      keyFileName, File(defaultFileName)
    ) || abort()

    var fileName = result[keyFileName]
    var format = result[keyFormat]

    if (!format || !fileName)
      abort()

    if (!hasSuffix(fileName))
      fileName = addSuffix(fileName, format)

    var f = File(fileName)
    if (!f.open()) {
      popup('Failed to open \"' + f.fileName() + '\"', f.errorString())
      abort()
    }

    f.write(selectedtab() ? getitem(currentitem())[format] : clipboard(format))
    popup(\"Item Saved\", 'Item saved as \"' + f.fileName() + '\".')"
Icon=\xf0c7
InMenu=true
Name=Save As...
Shortcut=Ctrl+S
